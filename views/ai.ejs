<head>
    <meta name="csrf-token" content="<%= csrfToken %>">
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/ai.css">
</head>

<div class="card">
    <div class="chat-header">Movie AI Chat</div>
    <div class="chat-window">
        <ul class="message-list" id="chatMessages"></ul>
    </div>
    <div class="chat-input">
        <input type="text" id="preferences" class="message-input" placeholder="Tell me your mood, time available, or genre...">
        <button id="ai-submit" class="send-button">Send</button>
    </div>
</div>

<script>
    document.getElementById("ai-submit").addEventListener("click", async () => {
        const userMessage = document.getElementById("preferences").value;
        if (!userMessage) {
            alert("Please enter your preferences!");
            return;
        }

        const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute("content");

        // PrikaÅ¾i korisnikovu poruku odmah u plavoj kartici
        appendMessage("user", userMessage);

        document.getElementById("preferences").value = "";

        try {
            const response = await fetch("/ai-recommend", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "CSRF-Token": csrfToken
                },
                body: JSON.stringify({ userMessage })
            });

            const data = await response.json();
            if (data.error) {
                appendMessage("ai", "Error: " + data.error);
            } else {
                typeWriterEffect("ai", data.recommendation, data.link);
            }
        } catch (error) {
            console.error("Error:", error);
            appendMessage("ai", "Error getting recommendation.");
        }
    });

    function appendMessage(sender, text, link = null) {
        const messageList = document.getElementById("chatMessages");
        const messageItem = document.createElement("li");
        messageItem.classList.add("message", sender === "user" ? "user-message" : "ai-message");

        if (link && sender === "ai") {
            messageItem.innerHTML = `<span class="typing-text"></span> <br><a href="${link}" class="ai-link" target="_blank">ðŸ”— Click Here</a>`;
        } else {
            messageItem.textContent = text;
        }

        messageList.appendChild(messageItem);
        document.querySelector(".chat-window").scrollTop = document.querySelector(".chat-window").scrollHeight;

        return sender === "ai" ? messageItem.querySelector(".typing-text") : null;
    }

    function typeWriterEffect(sender, text, link = null) {
        const messageSpan = appendMessage(sender, text, link);
        if (!messageSpan) return; // Ako je korisnik, nema efekta

        let index = 0;
        const speed = Math.max(15, 2000 / text.length);

        const interval = setInterval(() => {
            if (index < text.length) {
                messageSpan.textContent += text[index];
                index++;
            } else {
                clearInterval(interval);
            }
        }, speed);
    }


</script>
