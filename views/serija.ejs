<!DOCTYPE html>
<html lang="hr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= serija.title %> - Detalji</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/film.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap">
    <link rel="stylesheet" href="/css/serija.css">
    <link rel="icon" href="/images/favicon.ico" type="image/x-icon">
    
    <script>
        const csrfToken = "<%= csrfToken %>";
    </script>
</head>
<body>

    <% const validSeasons = seasons.filter(season => season.air_date && season.episode_count > 0); %>
    <% const lastSeason = validSeasons[validSeasons.length - 1]; %>
    <% const upcomingSeason = seasons.find(season => !season.air_date && season.season_number > lastSeason.season_number); %>


    <%- include('partials/header') %>

    <main>

        <section class="film-section">
            <div class="film-header" style="background-image: url('https://image.tmdb.org/t/p/original<%= serija.backdrop_path || serija.poster_path %>');">
                <div class="overlay"></div>
                <div class="film-content-wrapper">
                    <div class="film-content-container">
                        <div class="poster-container">
                            <img src="https://image.tmdb.org/t/p/w300<%= serija.poster_path %>" alt="<%= serija.title %> Poster" class="film-poster">
                            <% if (serija.videos && serija.videos.results.length > 0) { %>
                                <button class="action-btn play-trailer" onclick="playTrailer()" title="Pogledaj trailer">
                                    <i class="fas fa-play"></i> Play Trailer
                                </button>
                            <% } %>
                        </div>
                        <div class="film-info-wrapper">
                            <div class="film-info">
                                <div class="title-wrapper">
                                    <h1><%= serija.name || serija.title %> <span class="release-year">(<%= serija.first_air_date ? serija.first_air_date.substr(0, 4) : 'N/A' %>)</span></h1>
                                </div>

                                <div class="score-wrapper">
                                    <div class="score-container scuser">
                                        <p>User Score</p>
                                        <div class="score-box" style="--score-color: <%= userScoreColor %>;">
                                            <span><%= userScore || 'N/A' %></span>
                                        </div>
                                    </div>

                                    <div class="score-container sctmdb">
                                        <p>TMDB Score</p>
                                        <div class="score-box" style="--score-color: <%= tmdbScoreColor %>;">
                                            <span><%= tmdbRating || 'N/A' %></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="overview-wrapper">
                                    <h3>Overview</h3>
                                    <p><%= serija.overview %></p>
                                    <% if (creator && creator !== 'N/A') { %>
                                        <p class="director"><strong>Creator:</strong> <%= creator %></p>
                                    <% } %>
                                </div>
                                

                                <div class="film-actions">
                                    <button id="favorite-btn" class="action-btn favorite <%= isFavorite ? 'active' : '' %>" 
                                        data-id="<%= serija.id %>" data-tip="serija" title="Add to Favorites">
                                        <i class="<%= isFavorite ? 'fas' : 'far' %> fa-heart"></i>
                                    </button>
                                    
                                    <button id="watched-btn" class="action-btn watched <%= isWatched ? 'active' : '' %>" 
                                        data-id="<%= serija.id %>" data-tip="serija" title="Mark as Watched">
                                        <i class="<%= isWatched ? 'fas' : 'far' %> fa-check"></i>
                                    </button>       
                                
                                    <button id="open-list-dropdown" class="action-btn add-to-list" title="Dodaj na listu">
                                        <i class="fas fa-plus"></i>
                                    </button>
                                
                                    <div class="dropdown-popup" id="list-dropdown">
                                        <div class="dropdown-option" onclick="window.location.href='/popisi'">+ Create New List</div>
                                        <div class="dropdown-option" id="add-to-list">
                                            Add To List
                                            <div class="list-options" id="list-options">
                                            </div>
                                        </div>
                                    </div>
                                
                                    <a href="/serija/<%= serija.id %>/detalji" class="action-btn details-btn" title="See detailed information">
                                        <i class="fas fa-info-circle"></i> More Details
                                    </a>
                                </div>

                                <div class="misc-wrapper">
                                    <span><%= serija.genres.map(genre => genre.name).join(', ') %></span>
                                    <span>Seasons: <%= validSeasons.length %></span>
                                    <span>Episodes: <%= validSeasons.reduce((sum, season) => sum + (season.episode_count || 0), 0) %></span>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <div class="where-to-watch-wrapper">
            <h2>Where to Watch?</h2>
            <% if (watchProviders && watchProviders.providers.length > 0) { %>
                <div class="wtw-container">
                    <% watchProviders.providers.forEach(provider => { %>
                        <div class="wtw-item">
                            <img src="https://image.tmdb.org/t/p/w45<%= provider.logo_path %>" alt="<%= provider.provider_name %>">
                        </div>
                    <% }) %>
                </div>
                <% if (watchProviders.link) { %>
                    <a href="<%= watchProviders.link %>" target="_blank" class="watch-link">
                        See all options for <%= userLanguage %>
                    </a>
                <% } %>
            <% } else { %>
                <p>Currently unavailable for streaming in in <%= userLanguage %>.</p>
            <% } %>
        </div>

        <div id="trailer-modal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="closeTrailer()">&times;</span>
                <iframe id="trailer-video" width="708px" height="400px" frameborder="0" allowfullscreen></iframe>
            </div>
        </div>

        <div id="status-message" style="margin-top: 10px; font-weight: bold;"></div>


        <div class="main-content-wrapper">
            <div class="cast-season-wrapper">
                <div class="cast-wrapper">
                    <div class="content-wrapper">
                        <section class="film-cast">
                            <h2>Series Cast</h2>
                            <div class="cast-scroll-wrapper">
                                <div class="cast-horizontal-scroll">
                                    <% serija.credits.cast.slice(0, 10).forEach(actor => { %>
                                        <div class="cast-card">
                                            <div class="cast-frame">
                                                <a href="/osoba/<%= actor.id %>">
                                                    <img src="<%= actor.profile_path ? `https://image.tmdb.org/t/p/w200${actor.profile_path}` : '/images/placeholder.jpg' %>" alt="<%= actor.name %>">
                                                </a>
                                                <div class="cast-info">
                                                    <p class="cast-name"><strong><%= actor.name %></strong></p>
                                                    <p class="cast-character"><%= actor.character %></p>
                                                </div>
                                            </div>
                                        </div>
                                    <% }) %>
                                </div>
                            </div>
                            <a href="/serija/<%= serija.id %>/glumci" class="capitalLink">Full Cast & Crew</a>
                            <div class="hrHorizontal"><hr></div>
                        </section>
                    </div>
                </div>

                <div class="season-wrapper">
                    <h2><%= serija.status === 'Ended' ? 'Last Season' : 'Current Season' %></h2>
                    <div class="season-content">
                        <div class="season-card">
                            <a href="/serija/<%= serija.id %>/season/<%= lastSeason.season_number %>">
                                <img class="season-poster" src="<%= lastSeason.poster_path ? `https://image.tmdb.org/t/p/w200${lastSeason.poster_path}` : '/images/placeholder.jpg' %>" alt="Season Poster">
                            </a>
                            <div class="season-details">
                                <div class="season-details-name">
                                    <a href="/serija/<%= serija.id %>/season/<%= lastSeason.season_number %>">
                                        <h3>Season <%= lastSeason.season_number %></h3>
                                    </a>
                                </div>
                
                                <div class="misc-wrapper tockice">
                                    <div class="tockice-score">
                                        <span><%= serija.vote_average.toFixed(1) %></span>
                                    </div>
                                    <span><%= lastSeason.air_date?.substr(0, 4) || 'N/A' %></span>
                                    <span><%= lastSeason.episode_count || 'N/A' %> eps</span>
                                </div>
                                
                                <div class="season-details-messages">
                                    <p>
                                        <% if (lastSeason && lastSeason.air_date) { %>
                                            Season <%= lastSeason.season_number %> of <%= serija.name %> premiered on <%= new Date(lastSeason.air_date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %>.
                                        <% } else { %>
                                            Information about the current season is not available.
                                        <% } %>
                                    </p>
                                    
                                    <p class="message-upcoming">
                                        <% if (upcomingSeason) { %>
                                            <span style="color: #0d4116; padding-right: 5px;">▶</span>Season <%= upcomingSeason.season_number %> officially confirmed!
                                        <% } else if (serija.status === 'Ended') { %>
                                            This is the last and final season.
                                        <% } else { %>
                                            No new seasons confirmed.
                                        <% } %>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <a href="/serija/<%= serija.id %>/seasons" class="view-seasons-link">View All Seasons</a>
                    <hr>
                </div>            
                
                <%- include('partials/comments', { komentari, id: serijaId, type: 'serija', session }) %>
                
            </div>

            <!--<div class="divider"></div>-->

            <div class="recommend-wrapper">
                <div class="recommend">
                    <h2>Recommendations</h2>
                    <div class="recommend-grid">
                        <% preporuke.forEach(preporuka => { %>
                            <div class="recommend-card"
                                data-image="<%= preporuka.backdrop_path ? 'https://image.tmdb.org/t/p/w780' + preporuka.backdrop_path : '/images/placeholder.jpg' %>">
                                <a href="/serija/<%= preporuka.id %>">
                                    <div class="poster"></div>
                                    <div class="recommend-naslov">
                                        <p>
                                            <%= preporuka.name %> (<%= preporuka.first_air_date ? preporuka.first_air_date.substr(0, 4) : 'N/A' %>)
                                        </p>
                                        <div class="flex-align-center">
                                            <span class="recommend-score">
                                                <%= preporuka.vote_average.toFixed(1) %>
                                            </span>
                                        </div>
                                        
                                    </div>
                                </a>
                            </div>
                        <% }) %>
                    </div>
                </div>
            </div>        
        </div>
        <div id="popup-message" class="popup-message"></div>


        <div class="blank"></div>
        

    </main>
    
    <%- include('partials/footer') %>

    <script>
        function getScoreColor(score) {
            if (!score || isNaN(score)) return 'grey';
            const red = Math.min(255, Math.max(0, 255 - Math.round((score / 10) * 255)));
            const green = Math.min(255, Math.max(0, Math.round((score / 10) * 255)));
            return `rgb(${red}, ${green}, 0)`;
        }

        function playTrailer() {
            const trailerKey = '<%= serija.videos && serija.videos.results ? serija.videos.results.find(video => video.type === "Trailer")?.key : null %>';
            if (trailerKey) {
                const modal = document.getElementById('trailer-modal');
                const iframe = document.getElementById('trailer-video');
                iframe.src = `https://www.youtube.com/embed/${trailerKey}`;
                modal.style.display = 'flex';
            } else {
                console.warn("Trailer nije pronađen za ovu seriju.");
            }
        }

        function closeTrailer() {
            const modal = document.getElementById('trailer-modal');
            const iframe = document.getElementById('trailer-video');
            iframe.src = '';
            modal.style.display = 'none';
        }

        document.addEventListener("DOMContentLoaded", function () {
            const recommendCards = document.querySelectorAll(".recommend-card");
            recommendCards.forEach(card => {
                const imageUrl = card.getAttribute("data-image");
                if (imageUrl) {
                    card.querySelector(".poster").style.backgroundImage = `url('${imageUrl}')`;
                }
            });
        });

        document.querySelector('.add-to-list').addEventListener('click', async () => {
            const listOptions = document.getElementById('list-options');

            if (listOptions.childElementCount === 0) {
                try {
                    const response = await fetch('/api/popisi?tip_popisa=serije');
                    const popisi = await response.json();

                    if (popisi.length === 0) {
                        listOptions.innerHTML = '<p>No lists available.</p>';
                    } else {
                        popisi.forEach(popis => {
                            const listItem = document.createElement('div');
                            listItem.className = 'dropdown-option';
                            listItem.innerText = popis.naziv;
                            listItem.onclick = () => addToList(popis.id, 'serija');
                            listOptions.appendChild(listItem);
                        });
                    }
                } catch (error) {
                    console.error('Error fetching lists:', error);
                }
            }
        });

        function showPopupMessage(message, isSuccess) {
            const popup = document.getElementById('popup-message');
            popup.textContent = message;
            popup.className = `popup-message ${isSuccess ? 'success' : 'error'}`;
            popup.style.display = 'block';

            setTimeout(() => {
                popup.style.display = 'none';
            }, 4000);
        }

        async function addToList(listId, tipSadrzaja) {
            const contentId = '<%= serija.id %>';
            try {
                const response = await fetch('/popisi/dodaj', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'CSRF-Token': csrfToken,
                    },
                    body: JSON.stringify({ popis_id: listId, sadrzaj_id: contentId, tip_sadrzaja: tipSadrzaja }),
                });

                if (response.ok) {
                    showPopupMessage('Successfully added to the list!', true);
                } else if (response.status === 409) {
                    showPopupMessage('This content is already in the list!', false);
                } else if (response.status === 401) {
                    showPopupMessage('Login to use this', false);
                } else {
                    showPopupMessage('Failed to add to the list.', false);
                }
            } catch (error) {
                console.error('Error adding to the list:', error);
                showPopupMessage('Failed to add to the list.', false);
            }
        }

        async function toggleFavorite() {
            const btn = document.getElementById('favorite-btn');
            const contentId = btn.getAttribute('data-id');
            const tip = btn.getAttribute('data-tip');

            const isActive = btn.classList.contains('active');
            const url = isActive ? '/favoriti/ukloni' : '/favoriti/dodaj';

            const response = await fetch(url, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json', 'CSRF-Token': csrfToken },
                body: JSON.stringify({ sadrzaj_id: contentId, tip })
            });

            if (response.ok) {
                btn.classList.toggle('active');
                btn.querySelector("i").classList.toggle("fas");
                btn.querySelector("i").classList.toggle("far");
                showPopupMessage(isActive ? 'Removed from Favorites!' : 'Added to Favorites!', true);
            } else if (response.status === 401) {
                showPopupMessage('Login to use this', false);
            } else {
                showPopupMessage('Error updating Favorites.', false);
            }
        }

        document.getElementById('favorite-btn').addEventListener('click', toggleFavorite);

        async function toggleWatched() {
            const btn = document.getElementById('watched-btn');
            const contentId = btn.getAttribute('data-id');
            const tip = btn.getAttribute('data-tip');

            const isActive = btn.classList.contains('active');
            const url = isActive ? '/pogledano/ukloni' : '/pogledano/dodaj';

            const response = await fetch(url, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json', 'CSRF-Token': csrfToken },
                body: JSON.stringify({ sadrzaj_id: contentId, tip })
            });

            if (response.ok) {
                btn.classList.toggle('active');
                btn.querySelector("i").classList.toggle("fas");
                btn.querySelector("i").classList.toggle("far");
                showPopupMessage(isActive ? 'Removed from Watched!' : 'Marked as Watched!', true);
            } else if (response.status === 401) {
                showPopupMessage('Login to use this', false);
            } else {
                showPopupMessage('Error updating Watched.', false);
            }
        }

        document.getElementById('watched-btn').addEventListener('click', toggleWatched);



        document.getElementById('open-list-dropdown').addEventListener('click', () => {
            const dropdown = document.getElementById('list-dropdown');
            dropdown.classList.toggle('active');
        });

        document.addEventListener('click', (event) => {
            const dropdown = document.getElementById('list-dropdown');
            const openButton = document.getElementById('open-list-dropdown');

            if (!dropdown.contains(event.target) && event.target !== openButton) {
                dropdown.classList.remove('active');
            }
        });
    </script>
</body>
</html>
